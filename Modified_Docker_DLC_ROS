

#####################
# DLC Dockerfile from https://github.com/MMathisLab/Docker4DeepLabCut2.0/blob/master/Dockerfile
#####################

FROM python:3

RUN pip install imageio
# install ffmpeg from imageio.
RUN pip install imageio-ffmpeg

FROM bethgelab/deeplearning:cuda9.0-cudnn7
RUN apt-get update
RUN apt-get -y install ffmpeg

RUN pip install --upgrade pip

RUN pip install tensorflow-gpu==1.8

RUN pip3 install deeplabcut

RUN pip install ipywidgets
RUN pip3 install ipywidgets

RUN pip3 install seaborn




#####################
# CREDITS : JJJ
#####################


# <REMOVED>
# Start from the Opengl-Support package
# FROM nvidia/opengl:1.0-glvnd-runtime-ubuntu16.04

# install ROS-core and base packages
RUN apt-get update && apt-get install -q -y \
  dirmngr \
  gnupg2 \
  lsb-release \
  && rm -rf /var/lib/apt/lists/*

# <REMOVED>
# setup keys
# RUN apt-key adv --keyserver hkp://keyserver.ubuntu.com:80 --recv-keys 421C365BD9FF1F717815A3895523BAEEB01FA116

# setup sources.list
RUN echo "deb http://packages.ros.org/ros/ubuntu `lsb_release -sc` main" > /etc/apt/sources.list.d/ros-latest.list

# install bootstrap tools
RUN apt-get update && apt-get install --no-install-recommends -y \
  python-rosdep \
  python-rosinstall \
  python-vcstools \
  && rm -rf /var/lib/apt/lists/*

# setup environment
ENV LANG C.UTF-8
ENV LC_ALL C.UTF-8

# bootstrap rosdep
RUN rosdep init \
  && rosdep update

# install ros packages
ENV ROS_DISTRO kinetic
  RUN apt-get update && apt-get install -y \
  ros-kinetic-ros-core=1.3.2-0* \
  && rm -rf /var/lib/apt/lists/*

# install ros base packages
RUN apt-get update && apt-get install -y \
  ros-kinetic-ros-base=1.3.2-0* \
  && rm -rf /var/lib/apt/lists/*

# install the robot packages
RUN apt-get update && apt-get install -y \
  ros-kinetic-robot=1.3.2-0* \
  && rm -rf /var/lib/apt/lists/*

# <CHANGED>
RUN mkdir -p /root/DLCROS_ws/src
# RUN mkdir -p /root/baxter_ws/src

# <CHANGED>
WORKDIR /root/DLCROS_ws/src
# WORKDIR /root/baxter_ws/src

# <REMOVED>
# Download the baxter message types and modified baxter_interface python API for python3
#RUN git clone https://github.com/RethinkRobotics/baxter_common.git \
#  && git clone https://github.com/jacobjj/baxter_interface.git

WORKDIR ..

# setup source list
RUN echo "deb http://packages.ros.org/ros/ubuntu `lsb_release -sc` main" > /etc/apt/sources.list.d/ros-latest.list

# getting the catkin build tools 
RUN apt-get update && apt-get install -y \
  python-catkin-pkg\
  python-catkin-tools\
  && rm -rf /var/lib/apt/lists/*

# Important packages for building the messages in python 3
RUN apt-get update && apt-get install -y \
  ros-kinetic-catkin \
  python3-empy \
  python3-catkin-pkg-modules \
  python3-rospkg-modules\
  && rm -rf /var/lib/apt/lists/*


# Python packages for gazebo-ros-commmunication
RUN apt-get update && apt-get install -y \
  ros-kinetic-gazebo-ros-pkgs \
  ros-kinetic-gazebo-ros-control \
  && rm -rf /var/lib/apt/lists/*

#<OPTION 1> #FROM JJJ#

RUN /bin/bash -c "source /opt/ros/kinetic/setup.bash && \
  catkin build --cmake-args -DPYTHON_VERSION=3.6"

#<OPTION 2> #FROM SO link: https://stackoverflow.com/questions/49221565/unable-to-use-cv-bridge-with-ros-kinetic-and-python3?rq=1 #

# `python-catkin-tools` is needed for catkin tool
# `python3-dev` and `python3-catkin-pkg-modules` is needed to build cv_bridge
# `python3-numpy` and `python3-yaml` is cv_bridge dependencies
# `ros-kinetic-cv-bridge` is needed to install a lot of cv_bridge deps. Probably you already have it installed.

sudo apt-get install python-catkin-tools python3-dev python3-catkin-pkg-modules python3-numpy python3-yaml ros-kinetic-cv-bridge


# Create catkin workspace
mkdir catkin_workspace
cd catkin_workspace
catkin init

# Instruct catkin to set cmake variables
catkin config -DPYTHON_EXECUTABLE=/usr/bin/python3 -DPYTHON_INCLUDE_DIR=/usr/include/python3.6m -DPYTHON_LIBRARY=/usr/lib/x86_64-linux-gnu/libpython3.6m.so

# Instruct catkin to install built packages into install place. It is $CATKIN_WORKSPACE/install folder
catkin config --install

# Clone cv_bridge src
git clone https://github.com/ros-perception/vision_opencv.git src/vision_opencv

# Add this part to the scripting
# Find version of cv_bridge in your repository
apt-cache show ros-kinetic-cv-bridge | grep Version
    Version: 1.12.8-0xenial-20180416-143935-0800

####echo 'Version: 1.12.8-0xenial-20180416-143935-0800' | awk -F[:-] '{print $2}'  Gives extra space, how to store this in variable?

# Checkout right version in git repo. In our case it is 1.12.8
cd src/vision_opencv/
git checkout 1.12.8
cd ../../

# Build
catkin build cv_bridge

# Extend environment with new package
source install/setup.bash --extend


CMD ["bash"]
